package com.springwithmysqldemo.sqlspringdemo.controller;

import com.springwithmysqldemo.sqlspringdemo.model.CustomerModel;
import com.springwithmysqldemo.sqlspringdemo.repository.CustomerRepository;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
//@RequestMapping(path="/customersql") // This means URL's start with /demo (after Application path)

@RestController // This means that this class is a Controller
//@RequestMapping(path="/customersql")
public class MainController{
     // This means to get the bean called cusRepository
    // Which is auto-generated by Spring, we will use it to handle the data
     CustomerRepository customerRepository;

    public MainController(CustomerRepository customerRepository) {
        this.customerRepository = customerRepository;
    }

    @PostMapping(path="/customer") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        CustomerModel cusmodel = new CustomerModel();
        cusmodel.setName(name);
        cusmodel.setEmail(email);
        customerRepository.save(cusmodel);
        return "Saved";
    }

    @GetMapping(path="/customer")
    public List<CustomerModel> getAllUsers() {
        // This returns a JSON or XML with the users
        return (List<CustomerModel>) customerRepository.findAll();
    }

    /* File controller REST API*/
    @PostMapping("/upload-file")
    public ResponseEntity<String> uploadFile(@RequestParam("file")MultipartFile file){
        System.out.println(file.getOriginalFilename());
        System.out.println(file.getSize()); //returns in bytes
        System.out.println(file.getContentType());
        System.out.println(file.getName());
        return ResponseEntity.ok("Working");
    }

}
